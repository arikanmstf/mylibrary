// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test/app/ui/Button/Native.test.js Render: props: { onPress } 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    onPress={[MockFunction]}
    text="dummyText"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Text)
        onPress={[MockFunction]}
      >
        dummyText
      </Styled(Text)>,
      "full": true,
      "onPress": [MockFunction],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "dummyText",
        "onPress": [MockFunction],
        "to": undefined,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": "dummyText",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Text)
          onPress={[MockFunction]}
        >
          dummyText
        </Styled(Text)>,
        "full": true,
        "onPress": [MockFunction],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "dummyText",
          "onPress": [MockFunction],
          "to": undefined,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": "dummyText",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`test/app/ui/Button/Native.test.js Render: props: { primary } 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    primary={true}
    text="dummyText"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Text)
        primary={true}
      >
        dummyText
      </Styled(Text)>,
      "full": true,
      "onPress": [Function],
      "primary": true,
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "dummyText",
        "primary": true,
        "to": undefined,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": "dummyText",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Text)
          primary={true}
        >
          dummyText
        </Styled(Text)>,
        "full": true,
        "onPress": [Function],
        "primary": true,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "dummyText",
          "primary": true,
          "to": undefined,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": "dummyText",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`test/app/ui/Button/Native.test.js Render: props: { raised } 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    raised={true}
    text="dummyText"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Text)
        raised={true}
      >
        dummyText
      </Styled(Text)>,
      "full": true,
      "onPress": [Function],
      "raised": true,
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "dummyText",
        "raised": true,
        "to": undefined,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": "dummyText",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Text)
          raised={true}
        >
          dummyText
        </Styled(Text)>,
        "full": true,
        "onPress": [Function],
        "raised": true,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "dummyText",
          "raised": true,
          "to": undefined,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": "dummyText",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`test/app/ui/Button/Native.test.js Render: props: { text } 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    text="dummyText"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Text)>
        dummyText
      </Styled(Text)>,
      "full": true,
      "onPress": [Function],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "dummyText",
        "to": undefined,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": "dummyText",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Text)>
          dummyText
        </Styled(Text)>,
        "full": true,
        "onPress": [Function],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "dummyText",
          "to": undefined,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": "dummyText",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
